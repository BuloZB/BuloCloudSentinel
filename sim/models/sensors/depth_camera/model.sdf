<?xml version="1.0" ?>
<sdf version="1.8">
  <model name="depth_camera">
    <pose>0 0 0 0 0 0</pose>
    
    <link name="base_link">
      <inertial>
        <mass>0.15</mass>
        <inertia>
          <ixx>0.00001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00001</iyy>
          <iyz>0</iyz>
          <izz>0.00001</izz>
        </inertia>
        <pose>0 0 0 0 0 0</pose>
      </inertial>
      
      <collision name="collision">
        <geometry>
          <box>
            <size>0.025 0.09 0.025</size>
          </box>
        </geometry>
      </collision>
      
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://depth_camera/meshes/depth_camera.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <material>
          <ambient>0.1 0.1 0.1 1.0</ambient>
          <diffuse>0.1 0.1 0.1 1.0</diffuse>
          <specular>0.01 0.01 0.01 1.0</specular>
        </material>
      </visual>
      
      <!-- Depth camera sensor -->
      <sensor name="depth_camera_sensor" type="depth_camera">
        <pose>0 0 0 0 0 0</pose>
        <topic>depth</topic>
        <update_rate>30</update_rate>
        <camera>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>10.0</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
          <lens>
            <type>gnomonical</type>
            <scale_to_hfov>true</scale_to_hfov>
            <cutoff_angle>1.5707</cutoff_angle>
            <env_texture_size>256</env_texture_size>
          </lens>
        </camera>
        <depth_camera>
          <output>depths</output>
          <clip>
            <near>0.1</near>
            <far>10.0</far>
          </clip>
        </depth_camera>
        <visualize>true</visualize>
        <always_on>true</always_on>
      </sensor>
      
      <!-- RGB camera sensor (for RGBD) -->
      <sensor name="rgb_camera_sensor" type="camera">
        <pose>0 0 0 0 0 0</pose>
        <topic>rgb</topic>
        <update_rate>30</update_rate>
        <camera>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
          <lens>
            <type>gnomonical</type>
            <scale_to_hfov>true</scale_to_hfov>
            <cutoff_angle>1.5707</cutoff_angle>
            <env_texture_size>256</env_texture_size>
          </lens>
        </camera>
        <visualize>true</visualize>
        <always_on>true</always_on>
      </sensor>
    </link>
    
    <!-- ROS2 bridge plugin for depth camera -->
    <plugin
      filename="ignition-gazebo-ros-depth-camera-system"
      name="ignition::gazebo::systems::RosDepthCamera">
      <namespace>sensors</namespace>
      <topic>depth</topic>
      <frame_id>depth_camera_link</frame_id>
      <point_cloud_cutoff>0.1</point_cloud_cutoff>
    </plugin>
    
    <!-- ROS2 bridge plugin for RGB camera -->
    <plugin
      filename="ignition-gazebo-ros-camera-system"
      name="ignition::gazebo::systems::RosCamera">
      <namespace>sensors</namespace>
      <topic>rgb</topic>
      <frame_id>depth_camera_link</frame_id>
    </plugin>
  </model>
</sdf>
