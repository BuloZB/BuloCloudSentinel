name: Database Migrations
true:
  schedule:
  - cron: 0 0 * * *
  workflow_dispatch: null
jobs:
  check-migrations:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: 'python -m pip install --upgrade pip

        if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt;
        else echo ''Warning: backend/requirements.txt not found''; fi

        pip install alembic psycopg2-binary

        '
    - name: Check migrations
      run: 'cd backend

        alembic check || true

        alembic current || true

        alembic history || true

        '
  notification:
    needs:
    - check-migrations
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Send notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: ci-alerts
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: Database migrations check completed
        SLACK_TITLE: Database Migrations Results
        SLACK_USERNAME: GitHub Actions
      continue-on-error: true
      if: ${ secrets.SLACK_WEBHOOK != '' }
