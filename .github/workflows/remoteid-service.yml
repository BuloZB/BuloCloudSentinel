name: Remote ID Service CI/CD

on:
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight
  push:
    paths:
      - 'remoteid_service/**'
      - '.github/workflows/remoteid-service.yml'


permissions:
  contents: read
  issues: read
  pull-requests: read
  actions: read
  security-events: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 isort mypy
          pip install -r remoteid_service/requirements.txt
      - name: Run black
        run: |
          black --check remoteid_service
      - name: Run flake8
        run: |
          flake8 remoteid_service
      - name: Run isort
        run: |
          isort --check-only --profile black remoteid_service
      - name: Run mypy
        run: |
          mypy remoteid_service

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety
          pip install -r remoteid_service/requirements.txt
      - name: Run bandit
        run: |
          bandit -r remoteid_service -x remoteid_service/tests
      - name: Run safety
        run: |
          safety check -r remoteid_service/requirements.txt

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:14-3.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: placeholderpassword
          POSTGRES_DB: test_remoteid
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio pytest-cov
          pip install -r remoteid_service/requirements.txt
      - name: Run tests
        run: |
          pytest remoteid_service/tests --cov=remoteid_service --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [lint, security-scan, test]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./remoteid_service
          push: false
          tags: bulo/remoteid-service:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  helm-lint:
    name: Helm Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.1
      - name: Lint Helm chart
        run: |
          helm lint remoteid_service/kubernetes/helm

  success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [lint, security-scan, test, build, helm-lint]
    steps:
      - name: Success
        run: echo "All CI checks passed successfully!"
