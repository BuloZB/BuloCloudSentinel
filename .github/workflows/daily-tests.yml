name: Daily Tests

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-secure.txt
          pip install pytest pytest-cov

      - name: Run backend tests
        run: |
          cd backend
          pytest --cov=app --cov-report=xml || true

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: backend/coverage.xml

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend tests
        run: |
          cd frontend
          npm test -- --coverage || true

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: frontend/coverage

  anti-jamming-service-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r anti_jamming_service/requirements.txt
          pip install pytest pytest-cov

      - name: Run anti-jamming service tests
        run: |
          cd anti_jamming_service
          pytest --cov=. --cov-report=xml || true

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: anti-jamming-service-coverage-report
          path: anti_jamming_service/coverage.xml

  vision-system-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r vision_system/requirements.txt
          pip install pytest pytest-cov

      - name: Run vision system tests
        run: |
          cd vision_system
          pytest --cov=. --cov-report=xml || true

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: vision-system-coverage-report
          path: vision_system/coverage.xml

  notification:
    needs: [backend-tests, frontend-tests, anti-jamming-service-tests, vision-system-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ci-alerts
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Daily tests completed'
          SLACK_TITLE: Daily Tests Results
          SLACK_USERNAME: GitHub Actions
