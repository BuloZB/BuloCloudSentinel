name: Docker Build

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          tags: bulo-cloud-sentinel/backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: false
          tags: bulo-cloud-sentinel/frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-anti-jamming-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build anti-jamming service Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./anti_jamming_service
          push: false
          tags: bulo-cloud-sentinel/anti-jamming-service:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-vision-system:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build vision system Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./vision_system
          push: false
          tags: bulo-cloud-sentinel/vision-system:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  notification:
    needs: [build-backend, build-frontend, build-anti-jamming-service, build-vision-system]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ci-alerts
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Docker builds completed'
          SLACK_TITLE: Docker Build Results
          SLACK_USERNAME: GitHub Actions
