name: Dependency Update
true:
  schedule:
  - cron: 0 0 * * *
  workflow_dispatch: null
jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: "python -m pip install --upgrade pip\npip install pip-tools safety pip-audit\n\
        if [ -f requirements.txt ]; then\n  pip install -r requirements.txt\nfi\n"
    - name: Check for outdated dependencies
      id: outdated
      run: "pip list --outdated --format=json > outdated.json\necho \"OUTDATED_COUNT=$(jq\
        \ length outdated.json)\" >> $GITHUB_ENV\nif [ -s outdated.json ]; then\n\
        \  cat outdated.json | jq -r '.[] | \"* \\(.name): \\(.version) -> \\(.latest_version)\"\
        ' > outdated.md\n  echo \"Found $(jq length outdated.json) outdated packages\"\
        \nelse\n  echo \"No outdated packages found\"\n  echo \"No outdated packages\
        \ found\" > outdated.md\nfi\n"
    - name: Run safety check
      run: 'safety check -r requirements.txt --output text > safety-report.txt ||
        true

        echo "Safety check completed. See safety-report.txt for details."

        '
    - name: Run pip-audit check
      run: 'pip-audit -r requirements.txt -f json -o pip-audit-results.json || true

        echo "Pip-audit check completed. See pip-audit-results.json for details."

        '
    - name: Update dependencies
      if: env.OUTDATED_COUNT != '0'
      run: "# Create a temporary requirements file with updated versions\njq -r '.[]\
        \ | \"\\(.name)==\\(.latest_version)\"' outdated.json > updates.txt\n\n# Read\
        \ current requirements\ncp requirements.txt requirements.bak\n\n# Update requirements\
        \ with new versions\nwhile IFS= read -r line; do\n  package=$(echo \"$line\"\
        \ | cut -d '=' -f 1)\n  if grep -q \"^$package==\" requirements.txt; then\n\
        \    sed -i \"s/^$package==.*/$line/\" requirements.txt\n  fi\ndone < updates.txt\n"
    - name: Check for changes
      id: git-check
      run: 'git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT

        '
    - name: Commit changes
      if: steps.git-check.outputs.changes == 'true'
      run: 'git config --local user.email "github-actions[bot]@users.noreply.github.com"

        git config --local user.name "github-actions[bot]"

        git add .

        git commit -m "deps: update dependencies to fix security vulnerabilities


        Updated $(cat outdated.md | wc -l) packages to their latest versions.


        Security scan results are available in the workflow artifacts."

        '
    - name: Push changes
      if: steps.git-check.outputs.changes == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
    - name: Upload outdated dependencies report
      uses: actions/upload-artifact@v4
      with:
        name: outdated-dependencies
        path: outdated.md
    - name: Upload safety report
      uses: actions/upload-artifact@v4
      with:
        name: safety-report
        path: safety-report.txt
    - name: Upload pip-audit report
      uses: actions/upload-artifact@v4
      with:
        name: pip-audit-report
        path: pip-audit-results.json
