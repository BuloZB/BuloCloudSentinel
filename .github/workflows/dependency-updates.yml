name: Dependency Updates
true:
  schedule:
  - cron: 0 0 * * *
  workflow_dispatch: null
jobs:
  python-dependency-updates:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: 'python -m pip install --upgrade pip

        pip install pip-tools safety

        '
    - name: Check for security vulnerabilities
      id: safety
      run: 'safety check -r requirements.txt --json > safety-report.json || true

        safety check -r backend/requirements.txt --json > backend-safety-report.json
        || true

        safety check -r anti_jamming_service/requirements.txt --json > anti-jamming-safety-report.json
        || true

        safety check -r vision_system/requirements.txt --json > vision-safety-report.json
        || true


        # Combine reports

        jq -s ''add'' safety-report.json backend-safety-report.json anti-jamming-safety-report.json
        vision-safety-report.json > combined-safety-report.json


        # Check if there are vulnerabilities

        echo "HAS_VULNERABILITIES=$(jq ''length > 0'' combined-safety-report.json)"
        >> $GITHUB_ENV

        '
    - name: Update dependencies for security
      if: env.HAS_VULNERABILITIES == 'true'
      run: "# Run the dependency update script\npython scripts/update_dependencies.py\n\
        \n# Check if there are changes\nif [[ -n $(git status --porcelain) ]]; then\n\
        \  # Create a new branch\n  git config --global user.name \"GitHub Actions\"\
        \n  git config --global user.email \"actions@github.com\"\n  BRANCH_NAME=\"\
        security-updates-$(date +'%Y%m%d')\"\n  git checkout -b $BRANCH_NAME\n\n \
        \ # Commit and push changes\n  git add .\n  git commit -m \"Update dependencies\
        \ to fix security vulnerabilities\"\n  git push origin $BRANCH_NAME\n\n  #\
        \ Create pull request\n  gh pr create --title \"Security: Update dependencies\
        \ to fix vulnerabilities\" \\\n    --body \"This PR updates dependencies to\
        \ fix security vulnerabilities.\" \\\n    --base main \\\n    --head $BRANCH_NAME\n\
        fi\n"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Check for Python dependency updates
      if: env.HAS_VULNERABILITIES != 'true'
      run: 'pip-compile --upgrade requirements-secure.txt || true

        pip-compile --upgrade backend/requirements.txt || true

        pip-compile --upgrade anti_jamming_service/requirements.txt || true

        pip-compile --upgrade vision_system/requirements.txt || true

        '
  javascript-dependency-updates:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Check for JavaScript dependency updates
      run: 'cd frontend

        npm outdated || true

        '
  notification:
    needs:
    - python-dependency-updates
    - javascript-dependency-updates
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Send notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: ci-alerts
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: Dependency updates check completed
        SLACK_TITLE: Dependency Updates Results
        SLACK_USERNAME: GitHub Actions
      continue-on-error: true
      if: ${ secrets.SLACK_WEBHOOK != '' }
