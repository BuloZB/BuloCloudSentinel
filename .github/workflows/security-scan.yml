name: Security Scan

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit
          if [ -f requirements-secure.txt ]; then
            pip install -r requirements-secure.txt
          else
            pip install -r requirements.txt
          fi

      - name: Run safety check
        run: |
          safety check --full-report || true

      - name: Run bandit
        run: |
          bandit -r . -x "*/tests/*,*/node_modules/*" -f json -o bandit-results.json || true

      - name: Upload bandit results
        uses: actions/upload-artifact@v4
        with:
          name: bandit-results
          path: bandit-results.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install npm dependencies
        run: |
          cd frontend
          npm ci

      - name: Run npm audit
        run: |
          cd frontend
          npm audit --json > npm-audit-results.json || true

      - name: Upload npm audit results
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-results
          path: frontend/npm-audit-results.json

      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'BuloCloudSentinel'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --enableRetired
            --enableExperimental

      - name: Upload Dependency-Check results
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'json'
          output: 'trivy-results.json'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.json

      - name: Send notification
        if: ${{ always() && secrets.SLACK_WEBHOOK != '' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: security-alerts
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Security scan completed'
          SLACK_TITLE: Security Scan Results
          SLACK_USERNAME: GitHub Actions
        continue-on-error: true
