name: Force Security Rescan

on:
  workflow_dispatch:  # Allow manual triggering
  push:
    branches: [ main ]
    paths:
      - 'requirements*.txt'
      - 'backend/requirements.txt'
      - '**/requirements.txt'

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  force-dependabot-rescan:
    name: Force Dependabot Rescan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install latest security packages
        run: |
          python -m pip install --upgrade pip
          pip install safety==3.5.0 bandit==1.7.7 pip-audit

      - name: Check current dependency versions
        run: |
          echo "=== Current dependency versions ==="
          if [ -f requirements.txt ]; then
            echo "Main requirements.txt:"
            grep -E "(pyjwt|python-multipart|cryptography|pyopenssl)" requirements.txt || echo "Not found in main requirements"
          fi
          
          if [ -f backend/requirements.txt ]; then
            echo "Backend requirements.txt:"
            grep -E "(pyjwt|python-multipart|cryptography|pyopenssl)" backend/requirements.txt || echo "Not found in backend requirements"
          fi

      - name: Run comprehensive security scan
        run: |
          echo "=== Running Safety scan ==="
          if [ -f requirements.txt ]; then
            safety check -r requirements.txt --output text || true
          fi
          
          if [ -f backend/requirements.txt ]; then
            safety check -r backend/requirements.txt --output text || true
          fi
          
          echo "=== Running pip-audit ==="
          if [ -f requirements.txt ]; then
            pip-audit -r requirements.txt --output json --output-file pip-audit-main.json || true
          fi
          
          if [ -f backend/requirements.txt ]; then
            pip-audit -r backend/requirements.txt --output json --output-file pip-audit-backend.json || true
          fi

      - name: Run Bandit security scan
        run: |
          bandit -r . -x tests,venv,.venv,node_modules -f json -o bandit-results.json || true

      - name: Upload security scan results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            pip-audit-*.json
            bandit-results.json

  trigger-codeql:
    name: Trigger CodeQL Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python, javascript
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          upload: true

  verify-fixes:
    name: Verify Security Fixes
    runs-on: ubuntu-latest
    needs: [force-dependabot-rescan, trigger-codeql]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify critical dependency versions
        run: |
          echo "=== Verifying critical security fixes ==="
          
          # Check for python-multipart 0.0.20 (fixes CVE-2024-53981)
          if grep -q "python-multipart==0.0.20" requirements.txt backend/requirements.txt requirements-secure.txt 2>/dev/null; then
            echo "✅ python-multipart 0.0.20 found - CVE-2024-53981 should be fixed"
          else
            echo "❌ python-multipart 0.0.20 not found"
          fi
          
          # Check for pyjwt 2.10.1 (fixes CVE-2024-53861)
          if grep -q "pyjwt==2.10.1" requirements.txt backend/requirements.txt requirements-secure.txt 2>/dev/null; then
            echo "✅ pyjwt 2.10.1 found - CVE-2024-53861 should be fixed"
          else
            echo "❌ pyjwt 2.10.1 not found"
          fi
          
          # Check for cryptography 46.0.0 (fixes multiple CVEs)
          if grep -q "cryptography==46.0.0" requirements.txt backend/requirements.txt requirements-secure.txt 2>/dev/null; then
            echo "✅ cryptography 46.0.0 found - Multiple CVEs should be fixed"
          else
            echo "❌ cryptography 46.0.0 not found"
          fi
          
          # Check that python-jose is removed
          if ! grep -q "python-jose" requirements.txt backend/requirements.txt requirements-secure.txt 2>/dev/null; then
            echo "✅ python-jose removed - CVE-2024-33664 and CVE-2024-33663 should be fixed"
          else
            echo "⚠️ python-jose still found in requirements"
          fi

      - name: Summary
        run: |
          echo "=== Security Fix Summary ==="
          echo "This workflow has been triggered to force GitHub to rescan dependencies"
          echo "and update the security status. Please check:"
          echo "1. GitHub Security tab: https://github.com/${{ github.repository }}/security"
          echo "2. Dependabot alerts: https://github.com/${{ github.repository }}/security/dependabot"
          echo "3. CodeQL results: https://github.com/${{ github.repository }}/security/code-scanning"
          echo ""
          echo "If issues persist, they may be in other dependency files or require manual review."
