{{- if .Values.database.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.database.name }}
  labels:
    app: {{ .Values.database.name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.database.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.database.name }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Values.database.name }}
        image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
        imagePullPolicy: {{ .Values.database.image.pullPolicy }}
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: postgres-password
        - name: POSTGRES_DB
          value: {{ .Values.database.credentials.database }}
        resources:
          {{- toYaml .Values.database.resources | nindent 10 }}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        {{- if .Values.database.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-db-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
{{- end }}
