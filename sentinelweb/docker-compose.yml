version: '3.8'

services:
  # SentinelWeb service
  sentinelweb:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sentinelweb
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - HOST=0.0.0.0
      - PORT=3000
      - POSTGRES_USER=\
      - POSTGRES_PASSWORD=\
      - POSTGRES_DB=\
      - POSTGRES_HOST=\
      - POSTGRES_PORT=\
      - REDIS_HOST=\
      - REDIS_PORT=\
      - REDIS_PASSWORD=\
      - BULOCLOUD_API_URL=\
      - BULOCLOUD_API_KEY=\
      - DRONECORE_URL=\
      - RTMP_SERVER=\
    volumes:
      - ./data:/app/backend/data
    depends_on:
      - db
      - redis
    networks:
      - sentinelweb-network
      - bulocloud-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: sentinelweb-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=\
      - POSTGRES_PASSWORD=\
      - POSTGRES_DB=\
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Use different port to avoid conflicts
    networks:
      - sentinelweb-network

  # Redis for caching and real-time data
  redis:
    image: redis:7-alpine
    container_name: sentinelweb-redis
    restart: unless-stopped
    ports:
      - "6380:6379"  # Use different port to avoid conflicts
    volumes:
      - redis_data:/data
    networks:
      - sentinelweb-network

volumes:
  postgres_data:
  redis_data:

networks:
  sentinelweb-network:
    driver: bridge
  bulocloud-network:
    external: true  # Connect to existing BuloCloudSentinel network
