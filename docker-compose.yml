version: '3.8'

services:
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    environment:
      - ENV=production
    depends_on:
      - db
      - redis

  ai_detection:
    build:
      context: ./ai_detection
    ports:
      - "8001:8001"
    environment:
      - ENV=production
    depends_on:
      - minio

  ai_integrations:
    build:
      context: ./bulo-sentinel-ai
    ports:
      - "8002:8002"
    environment:
      - ENV=production
      - CHATGPT_API_KEY=${CHATGPT_API_KEY}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DALLE_API_KEY=${DALLE_API_KEY}
      - WHISPER_API_KEY=${WHISPER_API_KEY}
      - AI_AUDIT_LOG_FILE=/data/ai_audit_log.json
    volumes:
      - ai_audit_data:/data
    depends_on:
      - minio

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    environment:
      - ENV=production

  rtmp_server:
    build:
      context: ./rtmp_server
    ports:
      - "1935:1935"
      - "8080:8080"

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: sentinel
      POSTGRES_PASSWORD: sentinelpassword
      POSTGRES_DB: sentineldb
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio
    command: server /data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
    volumes:
      - miniodata:/data

  telemetry_service:
    build:
      context: ./dronecore
    command: python telemetry_service.py
    ports:
      - "8100:8100"
    depends_on:
      - redis
      - db

  video_service:
    build:
      context: ./dronecore
    command: python video_service.py
    ports:
      - "8200:8200"
    depends_on:
      - redis
      - minio

  mission_service:
    build:
      context: ./dronecore
    command: python mission_service.py
    ports:
      - "8300:8300"
    depends_on:
      - redis
      - db

volumes:
  pgdata:
  miniodata:
  ai_audit_data:
