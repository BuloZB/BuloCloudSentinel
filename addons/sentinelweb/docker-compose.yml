version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sentinelweb-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/sentinelweb
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=${JWT_SECRET:-supersecretkey}
      - SENTINEL_API_URL=${SENTINEL_API_URL:-http://bulocloud-sentinel-api:8000}
      - SENTINEL_API_TOKEN=${SENTINEL_API_TOKEN}
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./plugins:/app/plugins
    depends_on:
      - db
      - redis
    networks:
      - sentinelweb-network
      - bulocloud-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sentinelweb-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - sentinelweb-network

  # PostgreSQL database
  db:
    image: postgres:14-alpine
    container_name: sentinelweb-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sentinelweb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - sentinelweb-network

  # Redis for caching and real-time data
  redis:
    image: redis:7-alpine
    container_name: sentinelweb-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - sentinelweb-network

  # Adminer for database management (optional)
  adminer:
    image: adminer
    container_name: sentinelweb-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - sentinelweb-network

volumes:
  postgres-data:
  redis-data:

networks:
  sentinelweb-network:
    driver: bridge
  bulocloud-network:
    external: true
