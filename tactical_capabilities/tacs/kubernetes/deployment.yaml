apiVersion: apps/v1
kind: Deployment
metadata:
  name: tacs
  namespace: bulo-sentinel
  labels:
    app: tacs
    component: tactical
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tacs
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: tacs
        component: tactical
    spec:
      containers:
      - name: tacs
        image: ${REGISTRY}/bulo-sentinel/tacs:${TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: postgres_host
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: postgres_port
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: tacs-secrets
              key: postgres_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tacs-secrets
              key: postgres_password
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: postgres_db
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: tacs-secrets
              key: secret_key
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: rabbitmq_host
        - name: RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: rabbitmq_port
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: tacs-secrets
              key: rabbitmq_user
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tacs-secrets
              key: rabbitmq_password
        - name: RABBITMQ_EXCHANGE
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: rabbitmq_exchange
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: redis_port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tacs-secrets
              key: redis_password
              optional: true
        - name: STORAGE_TYPE
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: storage_type
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: s3_bucket
              optional: true
        - name: S3_REGION
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: s3_region
              optional: true
        - name: S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: s3_endpoint
              optional: true
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: tacs-secrets
              key: s3_access_key
              optional: true
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: tacs-secrets
              key: s3_secret_key
              optional: true
        - name: KEYCLOAK_URL
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: keycloak_url
        - name: KEYCLOAK_REALM
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: keycloak_realm
        - name: KEYCLOAK_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: keycloak_client_id
        - name: KEYCLOAK_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: tacs-secrets
              key: keycloak_client_secret
              optional: true
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: tacs-config
              key: log_level
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
