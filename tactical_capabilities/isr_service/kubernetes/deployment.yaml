apiVersion: apps/v1
kind: Deployment
metadata:
  name: isr-service
  namespace: bulo-sentinel
  labels:
    app: isr-service
    component: tactical
spec:
  replicas: 2
  selector:
    matchLabels:
      app: isr-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: isr-service
        component: tactical
    spec:
      containers:
      - name: isr-service
        image: ${REGISTRY}/bulo-sentinel/isr-service:${TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: isr-service-config
              key: postgres_host
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: isr-service-config
              key: postgres_port
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: isr-service-secrets
              key: postgres_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: isr-service-secrets
              key: postgres_password
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: isr-service-config
              key: postgres_db
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: isr-service-secrets
              key: jwt_secret
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: isr-service-config
              key: rabbitmq_host
        - name: RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: isr-service-config
              key: rabbitmq_port
        - name: RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              name: isr-service-secrets
              key: rabbitmq_username
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: isr-service-secrets
              key: rabbitmq_password
        - name: RABBITMQ_EXCHANGE
          valueFrom:
            configMapKeyRef:
              name: isr-service-config
              key: rabbitmq_exchange
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: isr-service-config
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: isr-service-config
              key: redis_port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: isr-service-secrets
              key: redis_password
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - isr-service
              topologyKey: kubernetes.io/hostname
